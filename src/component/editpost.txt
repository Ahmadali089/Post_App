// import React, { useState, useEffect } from "react";
// import axios from "axios";
// import { Link, useParams } from "react-router-dom";
// import Button from "@mui/material/Button";
// const Editpost = () => {
//   const [id, setId] = useState("");
//   const [title, setTitle] = useState("");
//   const [body, setBody] = useState("");
//   const [userId, setUserId] = useState("");
//   const [successMessage, setSuccessMessage] = useState("");
//   const [loading, setLoading] = useState(false);

//   const { postId } = useParams();

//   useEffect(() => {
//     // Fetch data from API when component mounts
//     fetchData();

//     // eslint-disable-next-line react-hooks/exhaustive-deps
//   }, []);

//   const fetchData = async () => {
//     setLoading(true);
//     try {
//       const response = await axios.get(
//         `https://jsonplaceholder.typicode.com/posts/${postId}`
//       ); // Replace with your API endpoint
//       const { data } = response;
//       setId(data?.id);
//       setTitle(data?.title);
//       setBody(data?.body);
//       setUserId(data?.userId);
//     } catch (error) {
//       console.error("Error fetching data:", error);
//     }
//     setLoading(false);
//   };

//   const handleSubmit = (e) => {
//     e.preventDefault();
//     setLoading(true);
//     const blog = { title: title, body: body, userId: userId };

//     axios
//       .put(`https://jsonplaceholder.typicode.com/posts/${id}`, { blog })
//       .then((response) => {
//         console.log(response.data);
//         setLoading(false);
//         if (response.ok) {
//           console.log("successfully data is added");
//           setSuccessMessage("Blog is added successfully");
//           // Reset form fields after successful submission
//           setTitle("");
//           setBody("");
//           setUserId("");
//         }
//       })
//       .catch((error) => {
//         console.error("Error updating post:", error);
//         setLoading(false);
//       });
//   };

//   const handleTitleChange = (e) => {
//     const value = e.target.value;
//     // Check if the entered value has a minimum length of 5 characters
//     if (value.length < 5) {
//       alert("Title must be at least 5 characters long");
//     } else if (value.length <= 100) {
//       setTitle(value);
//     } else {
//       alert("Title cannot exceed 100 characters");
//     }
//   };

//   const handleBodyChange = (e) => {
//     const value = e.target.value;
//     if (value.length <= 500) {
//       setBody(value);
//     } else {
//       // Alert when the limit of 500 words is reached
//       alert("Maximum 500 words allowed!");
//     }
//   };

//   return (
//     <div>
//       <Link to="/">
//         <Button variant="contained">&larr;</Button>
//       </Link>
//       <h2>Edit a post</h2>
//       {successMessage && (
//         <div className="alert alert-success">{successMessage}</div>
//       )}
//       <form onSubmit={handleSubmit} className="container">
//         <div className="mb-3">
//           {loading && (
//             <div className="spinner-border text-primary" role="status">
//               <span className="visually-hidden">Loading...</span>
//             </div>
//           )}
//           <label htmlFor="exampleInputEmail1" className="form-label">
//             Title
//           </label>
//           <input
//             type="text"
//             className="form-control"
//             onChange={handleTitleChange}
//             value={title} // Controlled component
//             id="exampleInputEmail1"
//             aria-describedby="emailHelp"
//             required
//           />
//         </div>
//         <div className="mb-3">
//           <label htmlFor="exampleInputPassword1" className="form-label">
//             Body
//           </label>
//           <textarea
//             className="form-control"
//             required
//             onChange={handleBodyChange}
//             value={body}
//           />
//           <div className="container">
//             <p> Min 500 words / {body.length}</p>
//           </div>
//         </div>
//         <div className="mb-3">
//           <label htmlFor="exampleInputPassword1" className="form-label">
//             User ID
//           </label>
//           <input
//             type="text"
//             className="form-control"
//             onChange={(e) => {
//               setId(e.target.value);
//               const value = e.target.value;
//               // Ensure the entered value is a whole positive number
//               if (/^\d+$/.test(value) || value === "") {
//                 setUserId(value);
//               }
//             }}
//             value={id}
//             id="exampleInputPassword1"
//             required
//           />
//         </div>
//         <button type="submit" className="btn btn-primary">
//           Submit
//         </button>
//       </form>
//     </div>
//   );
// };

// export default Editpost;















/////////////////////////////////////////main post////////////////////////////////////////




// import "./MainPost.css";
// import { useState, useEffect } from "react";
// import { Link } from "react-router-dom";
// import axios from "axios";
// import CircularProgress from "@mui/material/CircularProgress";
// import "bootstrap/dist/css/bootstrap.min.css";
// // import Button from "react-bootstrap/Button";
// // import Modal from "react-bootstrap/Modal";

// function MainPost() {
//   const [stateData, setStateData] = useState([]);
//   const [start, setStart] = useState(0);
//   const [limit] = useState(10);
//   const [selectedPost, setSelectedPost] = useState(null);
//   const [loading, setLoading] = useState(true);
//   const [loading3, setLoading3] = useState(false);

//   const handleDelete = (index) => {
//     setSelectedPost(index);
//   };
//   const cancelDelete = () => {
//     setSelectedPost(null);
//   };
//   const confirmDelete = () => {
//     setLoading3(true);
//     const updatedStateData = [...stateData];
//     updatedStateData.splice(selectedPost, 1);
//     setStateData(updatedStateData);
//     // console.log(selectedPost);
//     setLoading3(false);
//   };

//   useEffect(() => {
//     setLoading(true);

//     axios
//       .get(
//         `https://jsonplaceholder.typicode.com/posts?_start=${start}&_limit=${limit}`
//       )
//       .then((res) => {
//         let updatedStateData = stateData.concat(res.data);
//         setStateData(updatedStateData);
//       })
//       .finally(() => {
//         setLoading(false);
//       });
//     // eslint-disable-next-line react-hooks/exhaustive-deps
//   }, [start]);

//   const handleNextPage = () => {
//     setStart(start + limit); // Increment start by the current limit
//   };

//   const handlePreviousPage = () => {
//     setStart(Math.max(0, start - limit)); // Decrement start by the current limit, ensuring it doesn't go below 0
//   };

//   return (
//     <>
//       {loading ? (
//         <div>
//           <div className="d-flex justify-content-center">
//             <div className="spinner-border" role="status">
//               <span className="sr-only"></span>
//             </div>
//           </div>
//         </div>
//       ) : (
//         <section className="container mt-5">
//           <h2 className="text-center mb-4">Posts</h2>
//           <Link to="/Addpost" className="me-2">
//             Add post
//           </Link>
//           <div>
//             {stateData.map((item, index) => (
//               <div key={index} className="col">
//                 <h5>Post {item.id}</h5>
//                 <p>{item.title}</p>
//                 <p>{item.body}</p>
//                 <div className="d-flex justify-content-end">
//                   <Link
//                     to={`/post/${item.id}`}
//                     className="btn btn-primary me-2"
//                   >
//                     Read more
//                   </Link>

//                   <Link
//                     to={`/Editpost/${item.id}`}
//                     className="btn btn-primary me-2"
//                   >
//                     Edit post
//                   </Link>

//                   <button
//                     className="btn btn-danger"
//                     onClick={() => {
//                       handleDelete(index);
//                     }}
//                   >
//                     Delete
//                   </button>
//                   {/*  */}
//                   <div>
//                     {selectedPost === index && (
//                       <div className="confirmation-div d-flex">
//                         <p>Are you sure you want to delete this post?</p>
//                         <button
//                           className="btn btn-danger"
//                           onClick={confirmDelete}
//                         >
//                           Confirm
//                         </button>
//                         <button
//                           className="btn btn-secondary"
//                           onClick={cancelDelete}
//                         >
//                           Cancel
//                         </button>
//                         {loading3 && (
//                           <div
//                             style={{
//                               display: "flex",
//                               justifyContent: "center",
//                               alignItems: "center",
//                               marginTop: "20px",
//                             }}
//                           >
//                             <CircularProgress style={{ color: "blue" }} />
//                           </div>
//                         )}
//                       </div>
//                     )}
//                   </div>
//                   {/*  */}
//                 </div>
//               </div>
//             ))}
//           </div>
//           <div className="mt-3 d-flex justify-content-center">
//             <button
//               className="btn btn-primary"
//               onClick={handlePreviousPage}
//               disabled={start === 0} // Disable the button if already on the first page
//             >
//               Previous Page
//             </button>
//             <button className="btn btn-primary" onClick={handleNextPage}>
//               Next Page
//             </button>
//           </div>
//         </section>
//       )}
//     </>
//   );
// }

// export default MainPost;